/api/v1/auth/register:
  post:
    summary: Register a new user
    description: Creates a new user account using email, phone number, password, first name, and last name.
    tags: [Authentication]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - phoneNumber
              - password
              - firstName
              - lastName
            properties:
              email:
                type: string
                format: email
                example: "user@example.com"
              phoneNumber:
                type: string
                description: "Phone number in international format, e.g., +1234567890"
                example: "+1234567890"
              password:
                type: string
                minLength: 8
                description: "Password with at least 8 characters"
                example: "Password123"
              firstName:
                type: string
                description: "User's first name"
                example: "John"
              lastName:
                type: string
                description: "User's last name"
                example: "Doe"
    responses:
      200:
        description: User registered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  description: "PASETO access token for the authenticated session"
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      400:
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "ERR_VALIDATION"
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        example: "email"
                      error:
                        type: string
                        example: "Invalid email format"
      401:
        description: Invalid credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "ERR_INVALID_CREDENTIALS"
                message:
                  type: string
                  example: "Email already exists"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "ERR_INTERNAL_SERVER"
                message:
                  type: string
                  example: "An internal server error occurred"