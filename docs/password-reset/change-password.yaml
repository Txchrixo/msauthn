/api/v1/auth/change-password:
  put:
    summary: Change the password for an authenticated user
    tags: [Password Reset]
    security:
      - bearerAuth: []  # PASETO authentication
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - oldPassword
              - newPassword
              - repeatNewPassword
            properties:
              userId:
                type: string
                description: The ID of the user changing the password
                example: "12345"
              oldPassword:
                type: string
                description: The user's current password
                example: "oldPassword123"
              newPassword:
                type: string
                description: The new password that the user wants to set
                example: "newPassword456"
              repeatNewPassword:
                type: string
                description: Must match the new password
                example: "newPassword456"
    responses:
      200:
        description: Password changed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Password successfully changed"
      400:
        description: Bad request due to validation issues or incorrect old password
        content:
          application/json:
            schema:
              type: object
              properties:
                errorCode:
                  type: string
                  example: "ERR_VALIDATION_ERROR"
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        example: "oldPassword"
                      error:
                        type: string
                        example: "Old password is incorrect"
      401:
        description: Unauthorized, invalid or expired token
        content:
          application/json:
            schema:
              type: object
              properties:
                errorCode:
                  type: string
                  example: "ERR_INVALID_TOKEN"
                message:
                  type: string
                  example: "Token is invalid or expired"
      403:
        description: Forbidden, user is not authorized
        content:
          application/json:
            schema:
              type: object
              properties:
                errorCode:
                  type: string
                  example: "ERR_UNAUTHORIZED"
                message:
                  type: string
                  example: "User is not authorized to access this resource"
      404:
        description: User not found
        content:
          application/json:
            schema:
              type: object
              properties:
                errorCode:
                  type: string
                  example: "ERR_NOT_FOUND"
                message:
                  type: string
                  example: "User not found"
      500:
        description: Server error, usually due to external service failure
        content:
          application/json:
            schema:
              type: object
              properties:
                errorCode:
                  type: string
                  example: "ERR_EXTERNAL_SERVICE"
                message:
                  type: string
                  example: "External service error"